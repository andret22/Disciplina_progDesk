/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ControllerProdutoBinario;
import controller.ControllerProdutoTexto;
import controller.ProdutoDAO;
import javax.swing.JOptionPane;
import model.Produto;

/**
 *
 * @author andre
 */
public class ProcurarProdutoView extends javax.swing.JFrame {

    //Controllers
    private ControllerProdutoTexto pt = new ControllerProdutoTexto();
    private ControllerProdutoBinario pb = new ControllerProdutoBinario();
    private ProdutoDAO pd = new ProdutoDAO();

    //Labels
    public static final int TEXT = 1;
    public static final int BINARY = 2;
    public static final int DATABASE = 3;
    private int mode = -1;

    public ProcurarProdutoView(int whereToSearch) {
        this.mode = whereToSearch;
        System.out.println("Entrando em modo " + mode);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        precoF = new javax.swing.JTextField();
        quantF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nomeF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        idF = new javax.swing.JTextField();
        buscarB = new javax.swing.JButton();
        salvarB = new javax.swing.JButton();
        voltarB = new javax.swing.JButton();
        removerB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame1.setVisible(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Preço");

        jLabel3.setText("Quantidade");

        jLabel4.setText("Nome");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(quantF, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .addComponent(precoF)
                    .addComponent(nomeF))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nomeF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(precoF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(37, 37, 37))
        );

        jLabel1.setText("ID");

        buscarB.setText("Buscar");
        buscarB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buscarBMousePressed(evt);
            }
        });

        salvarB.setText("Salvar alterações");
        salvarB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                salvarBMousePressed(evt);
            }
        });

        voltarB.setText("Voltar");
        voltarB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                voltarBMousePressed(evt);
            }
        });

        removerB.setText("Remover");
        removerB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                removerBMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(idF, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(279, 279, 279))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(salvarB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removerB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(voltarB))
                            .addComponent(buscarB)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(buscarB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salvarB)
                    .addComponent(removerB)
                    .addComponent(voltarB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarBMousePressed
        if (ControllerProdutoTexto.CFile.getArquivo() != null || ControllerProdutoBinario.BFile.getArquivo() != null || pd.checkConnection()) {
            buscar();
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um arquivo!!!", "Arquivo não encontrado", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buscarBMousePressed

    private void voltarBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_voltarBMousePressed
        TelaInicialView ti = new TelaInicialView();
        ti.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_voltarBMousePressed

    private void removerBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removerBMousePressed
        if (ControllerProdutoTexto.CFile.getArquivo() != null || ControllerProdutoBinario.BFile.getArquivo() != null || pd.checkConnection()) {
            remover();
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um arquivo!!!", "Arquivo não encontrado", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_removerBMousePressed

    private void salvarBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salvarBMousePressed
        if (ControllerProdutoTexto.CFile.getArquivo() != null || ControllerProdutoBinario.BFile.getArquivo() != null || pd.checkConnection()) {
            alterar();
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um arquivo!!!", "Arquivo não encontrado", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_salvarBMousePressed

    private void buscar() {
        try {

            switch (this.mode) {
                case TEXT -> {
                    try {
                        String[] resultado = pt.buscar(Integer.parseInt(idF.getText()));
                        if (resultado != null) {
                            nomeF.setText(resultado[1]);
                            precoF.setText(resultado[2]);
                            quantF.setText(resultado[3]);
                        } else {
                            nomeF.setText("");
                            precoF.setText("");
                            quantF.setText("");
                            JOptionPane.showMessageDialog(this, "Produto não encontado!!!", "Não encontrado", JOptionPane.INFORMATION_MESSAGE);
                        }
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(this, "Formato inválido", "Inválido", JOptionPane.ERROR_MESSAGE);
                    }
                }
                case BINARY -> {
                    Produto prod = pb.buscar(Integer.parseInt(idF.getText()));
                    if (prod != null && ControllerProdutoBinario.BFile != null) {
                        idF.setText(String.valueOf(prod.getId()));
                        nomeF.setText(prod.getNome());
                        quantF.setText(String.valueOf(prod.getQuantidade()));
                        precoF.setText(String.valueOf(String.valueOf(prod.getPreco())));
                    } else {
                        nomeF.setText("");
                        precoF.setText("");
                        quantF.setText("");
                        JOptionPane.showMessageDialog(this, "Produto não encontado!!!", "Não encontrado", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                case DATABASE -> {
                    try {
                        Produto prod = pd.buscar(Integer.parseInt(idF.getText()));
                        if (prod != null) {
                            idF.setText(String.valueOf(prod.getId()));
                            nomeF.setText(prod.getNome());
                            quantF.setText(String.valueOf(prod.getQuantidade()));
                            precoF.setText(String.valueOf(String.valueOf(prod.getPreco())));
                        } else {
                            nomeF.setText("");
                            precoF.setText("");
                            quantF.setText("");
                            JOptionPane.showMessageDialog(this, "Produto não encontado!!!", "Não encontrado", JOptionPane.INFORMATION_MESSAGE);
                        }
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(this, "Formato inválido", "Inválido", JOptionPane.ERROR_MESSAGE);
                    }
                }
                default -> {
                    JOptionPane.showMessageDialog(this, "Algo deu errado!!!", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Informações inválidas nos campos", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void alterar() {
        switch (this.mode) {
            case TEXT -> {
                String[] result = pt.buscar(Integer.parseInt(idF.getText()));
                if (result != null) {
                    String[] novaInfo = (idF.getText() + ';' + nomeF.getText() + ';' + precoF.getText() + ';' + quantF.getText()).split(";");
                    if (ControllerProdutoTexto.CFile.atualizaLinha(result, novaInfo, pt.getLinha())) {
                        JOptionPane.showMessageDialog(this, "Dados atualizados!!!", "Atualização", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Algo deu errado!!!", "Erro", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Objeto não existente. Impossível alterar", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
            case BINARY -> {
                if (pb.alterar(pb.createProduto(Integer.parseInt(idF.getText()), nomeF.getText(),
                        Float.parseFloat(precoF.getText()), Integer.parseInt(quantF.getText())))) {
                    JOptionPane.showMessageDialog(this, "Dados atualizados!!!", "Atualização", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Objeto não existente. Impossível alterar", "Erro", JOptionPane.ERROR_MESSAGE);
                }

            }
            case DATABASE -> {
                if (pd.alterar(field2object(), Integer.parseInt(idF.getText()))) {
                    JOptionPane.showMessageDialog(this, "Dados atualizados!!!", "Atualização", JOptionPane.INFORMATION_MESSAGE);
                    pd.commit();
                } else {
                    JOptionPane.showMessageDialog(this, "Objeto não existente. Impossível alterar", "Erro", JOptionPane.ERROR_MESSAGE);
                    pd.rollback();
                }
            }
            default -> {
                JOptionPane.showMessageDialog(this, "Algo deu errado!!!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void remover() {
        switch (this.mode) {
            case TEXT -> {
                String[] result = pt.buscar(Integer.parseInt(idF.getText()));
                String[] novaInfo = "".split(";");
                if (ControllerProdutoTexto.CFile.atualizaLinha(result, novaInfo, pt.getLinha())) {
                    idF.setText("");
                    nomeF.setText("");
                    precoF.setText("");
                    quantF.setText("");
                    JOptionPane.showMessageDialog(this, "Dados Removidos!!!", "Atualização", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Algo deu errado!!!", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
            case BINARY -> {
                if (pb.remover(Integer.parseInt(idF.getText()))) {
                    JOptionPane.showMessageDialog(this, "Dados Removidos!!!", "Atualização", JOptionPane.INFORMATION_MESSAGE);
                    idF.setText("");
                    nomeF.setText("");
                    precoF.setText("");
                    quantF.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "Algo deu errado!!!", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
            case DATABASE -> {
                if (pd.excluir(Integer.parseInt(idF.getText()))) {
                    JOptionPane.showMessageDialog(this, "Dados Removidos!!!", "Atualização", JOptionPane.INFORMATION_MESSAGE);
                    idF.setText("");
                    nomeF.setText("");
                    precoF.setText("");
                    quantF.setText("");
                    pd.commit();
                } else {
                    JOptionPane.showMessageDialog(this, "Algo deu errado!!!", "Erro", JOptionPane.ERROR_MESSAGE);
                    pd.rollback();
                }
            }

            default -> {
            }
        }
    }

    private Produto field2object() {
        Produto prod = new Produto(Integer.parseInt(idF.getText()), nomeF.getText(),
                Float.parseFloat(precoF.getText()), Integer.parseInt(quantF.getText()));
        return prod;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarB;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField idF;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nomeF;
    private javax.swing.JTextField precoF;
    private javax.swing.JTextField quantF;
    private javax.swing.JButton removerB;
    private javax.swing.JButton salvarB;
    private javax.swing.JButton voltarB;
    // End of variables declaration//GEN-END:variables
}
